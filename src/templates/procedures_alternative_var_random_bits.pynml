<!--!
    The conventional way to get random_bits for a vehicle is getbits(random_bits, bits_offset, bits_count).
    For articulated vehicles this is not useful when we want the same random result for all parts.
    This provides an alternative to random_bits, which offsets to get the bits from the lead part of the articulated vehicle.
        To use:
        * switch_alternative_var_random_bits(bits_offset, bits_count)
-->

switch (FEAT_TRAINS, SELF, switch_alternative_var_random_bits, bits_offset, bits_count,
                                            [STORE_TEMP(-1 * position_in_articulated_veh, 0x10F),
                                             getbits(var[0x61, 8, 0x00FFFFFF, 0x5F], bits_offset, bits_count)]) {
    <!--! return with nothing else will yield the computed value -->
    return;
}

<!--! to aid managing which bits are used for what, access to them is wrapped in named pseudo vars
      these can then be eye-balled for overlaps
      - note that not all vehicles use all the pseudo vars, and/or not all overlaps are problematic
      - this could be book-kept by getting the bits via Train() or Consist() but seems like over-engineering as of August 2022
-->

<!--! colour set and weathered variant are ok to overlap (probably gets best visual result where vehicles use both together) -->
switch (FEAT_TRAINS, SELF, random_bits_colour_set, switch_alternative_var_random_bits(0, 1)) {
    <!--! return with nothing else to yield the computed value  -->
    return;
}
switch (FEAT_TRAINS, SELF, random_bits_weathered_variant, switch_alternative_var_random_bits(0, 1)) {
    <!--! return with nothing else to yield the computed value  -->
    return;
}

<!--! up to 8 random liveries for wagon recolour/remaps
      these may overlap random wagon choices due to shortage of bits, but eh, JFDI
-->
switch (FEAT_TRAINS, SELF, random_bits_wagon_random_remap_livery, switch_alternative_var_random_bits(9, 3)) {
    <!--! return with nothing else to yield the computed value  -->
    return;
}

<!--! randomised wagons (those with 'RandomisedConsist' in their classnames) have specific requirements for random bits
      these tend not to overlap with 'normal' wagons, engines etc
-->
switch (FEAT_TRAINS, SELF, random_bits_randomised_wagon_check_parent_or_self, switch_alternative_var_random_bits(6, 3)) {
    <!--! return with nothing else to yield the computed value  -->
    return;
}
<!--! the picking from bit 2 onwards is just a wild guess to try and make this independent from colour and weathering choices etc
      bits_counts varies, but is limited upstream by get_wagon_randomisation_candidates() - as of Aug 2024 6 bits are used (64 candidates)
-->
switch (FEAT_TRAINS, SELF, random_bits_randomised_wagon_choose_wagon_self, bits_count, switch_alternative_var_random_bits(0, bits_count)) {
    <!--! return with nothing else to yield the computed value  -->
    return;
}
<!--! getting the engine has to use PARENT and can't use switch_alternative_var_random_bits - but in this file for consistency -->
switch (FEAT_TRAINS, PARENT, random_bits_randomised_wagon_choose_wagon_parent, bits_count, getbits(var[0x61, 8, 0x00FFFFFF, 0x5F], 0, bits_count)) {
    <!--! return with nothing else to yield the computed value  -->
    return;
}

<!--! randomised decor (on / off)
      - this needs to be independent from random reverse
-->
switch (FEAT_TRAINS, SELF, random_bits_engine_show_decor, switch_alternative_var_random_bits(3, 1)) {
    <!--! return with nothing else to yield the computed value  -->
    return;
}
